name: Build
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  run-tests-coverage-docs:
    runs-on: ubuntu-22.04
    steps:
        - name: Checkout
          uses: actions/checkout@v2.0.0
        - name: Get all git tags
          run: git fetch --prune --unshallow --tags
        - name: Install dependencies
          run: sudo apt install build-essential git cmake libasio-dev libboost-dev libprotobuf-dev protobuf-compiler lcov doxygen ccache
        - name: Installs sphinx
          run: |
            python -m pip install --upgrade pip
            pip install sphinx_rtd_theme==0.5.2 breathe 'protobuf<=3.20'
        - name: Uses ccache
          uses: hendrikmuhs/ccache-action@v1
        - name: Configure
          run: |
            export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
            cmake -B ${{github.workspace}}/build \
               -DCMAKE_BUILD_TYPE=RelWithDebInfo \
               -DENABLE_COVERAGE=On \
               -DBUILD_PYTHON=On \
               -DBUILD_DOCS=On
        - name: Build
          working-directory: ${{github.workspace}}/build
          run: |
            export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
            make all
        - name: Test
          run: make coverage
          working-directory: ${{github.workspace}}/build
        - name: Sends coverage
          uses: codecov/codecov-action@v2
          id: send-coverage
          with:
            directory: ${{github.workspace}}/build/coverage
        - name: Build documentation
          working-directory: ${{github.workspace}}/build
          run: make fort-hermes-docs
        - name: Uploads documentation
          uses: actions/upload-artifact@v4
          with:
            name: sphinx-documentation
            path: ${{github.workspace}}/build/docs/sphinx

  deploys-documentation:
    runs-on: ubuntu-latest
    needs: run-tests-coverage-docs
    steps:
      - name: Checkout pages branch
        uses: actions/checkout@v2
        with:
          ref: gh-pages
      - name: Download built documentation
        uses: actions/download-artifact@v4
        with:
          name: sphinx-documentation
          path: _build
      - name: Copy new build
        run: |
          set -x
          rsync -avh --exclude _static _build/ latest --delete
          rsync -avh _build/_static/ _static --delete
          ./linkVersion.sh
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4
        if: ${{ github.event_name == 'push' }}
        with:
          branch: gh-pages
          folder: .
