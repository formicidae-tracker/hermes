// Code generated by protoc-gen-go. DO NOT EDIT.
// source: FrameReadout.proto

package hermes

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type FrameReadout_Error int32

const (
	FrameReadout_NO_ERROR         FrameReadout_Error = 0
	FrameReadout_PROCESS_OVERFLOW FrameReadout_Error = 1
)

var FrameReadout_Error_name = map[int32]string{
	0: "NO_ERROR",
	1: "PROCESS_OVERFLOW",
}
var FrameReadout_Error_value = map[string]int32{
	"NO_ERROR":         0,
	"PROCESS_OVERFLOW": 1,
}

func (x FrameReadout_Error) String() string {
	return proto.EnumName(FrameReadout_Error_name, int32(x))
}
func (FrameReadout_Error) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 0} }

type FrameReadout struct {
	Timestamp int64                      `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	FrameID   int64                      `protobuf:"varint,2,opt,name=frameID" json:"frameID,omitempty"`
	Ants      []*Ant                     `protobuf:"bytes,3,rep,name=ants" json:"ants,omitempty"`
	Time      *google_protobuf.Timestamp `protobuf:"bytes,4,opt,name=time" json:"time,omitempty"`
	Error     FrameReadout_Error         `protobuf:"varint,5,opt,name=error,enum=fort.hermes.FrameReadout_Error" json:"error,omitempty"`
}

func (m *FrameReadout) Reset()                    { *m = FrameReadout{} }
func (m *FrameReadout) String() string            { return proto.CompactTextString(m) }
func (*FrameReadout) ProtoMessage()               {}
func (*FrameReadout) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *FrameReadout) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *FrameReadout) GetFrameID() int64 {
	if m != nil {
		return m.FrameID
	}
	return 0
}

func (m *FrameReadout) GetAnts() []*Ant {
	if m != nil {
		return m.Ants
	}
	return nil
}

func (m *FrameReadout) GetTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *FrameReadout) GetError() FrameReadout_Error {
	if m != nil {
		return m.Error
	}
	return FrameReadout_NO_ERROR
}

func init() {
	proto.RegisterType((*FrameReadout)(nil), "fort.hermes.FrameReadout")
	proto.RegisterEnum("fort.hermes.FrameReadout_Error", FrameReadout_Error_name, FrameReadout_Error_value)
}

func init() { proto.RegisterFile("FrameReadout.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 282 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0x41, 0x4b, 0xc3, 0x30,
	0x18, 0x86, 0xed, 0xda, 0xaa, 0x4b, 0x87, 0x94, 0xe0, 0x21, 0x14, 0x61, 0x65, 0xec, 0x50, 0x10,
	0x53, 0xa8, 0xf8, 0x03, 0xa6, 0x76, 0x28, 0x88, 0x91, 0x4c, 0x14, 0xbc, 0x8c, 0xb4, 0x4b, 0xbb,
	0xa2, 0x69, 0x46, 0x9a, 0xde, 0xfd, 0xe9, 0xd2, 0xd4, 0xea, 0x76, 0xfc, 0xf2, 0x3e, 0x79, 0xbf,
	0x87, 0x0f, 0xc0, 0xa5, 0x62, 0x82, 0x53, 0xce, 0x36, 0xb2, 0xd5, 0x78, 0xa7, 0xa4, 0x96, 0xd0,
	0x2b, 0xa4, 0xd2, 0x78, 0xcb, 0x95, 0xe0, 0x4d, 0x30, 0x2d, 0xa5, 0x2c, 0xbf, 0x78, 0x6c, 0xa2,
	0xac, 0x2d, 0x62, 0x5d, 0x09, 0xde, 0x68, 0x26, 0x76, 0x3d, 0x1d, 0x8c, 0x17, 0xf5, 0xef, 0xc7,
	0xd9, 0xf7, 0x08, 0x4c, 0xf6, 0xfb, 0xe0, 0x05, 0x18, 0xff, 0xe1, 0xc8, 0x0a, 0xad, 0xc8, 0xa6,
	0xff, 0x0f, 0x10, 0x81, 0x93, 0xa2, 0xa3, 0x1f, 0xef, 0xd1, 0xc8, 0x64, 0xc3, 0x08, 0xe7, 0xc0,
	0x61, 0xb5, 0x6e, 0x90, 0x1d, 0xda, 0x91, 0x97, 0xf8, 0x78, 0x4f, 0x08, 0x2f, 0x6a, 0x4d, 0x4d,
	0x0a, 0x31, 0x70, 0xba, 0x32, 0xe4, 0x84, 0x56, 0xe4, 0x25, 0x01, 0xee, 0x4d, 0xf1, 0x60, 0x8a,
	0x5f, 0x87, 0x4d, 0xd4, 0x70, 0xf0, 0x06, 0xb8, 0x5c, 0x29, 0xa9, 0x90, 0x1b, 0x5a, 0xd1, 0x59,
	0x32, 0x3d, 0xa8, 0x3d, 0xb8, 0x43, 0xda, 0x61, 0xb4, 0xa7, 0x67, 0x97, 0xc0, 0x35, 0x33, 0x9c,
	0x80, 0xd3, 0x67, 0xb2, 0x4e, 0x29, 0x25, 0xd4, 0x3f, 0x82, 0xe7, 0xc0, 0x7f, 0xa1, 0xe4, 0x2e,
	0x5d, 0xad, 0xd6, 0xe4, 0x2d, 0xa5, 0xcb, 0x27, 0xf2, 0xee, 0x5b, 0xb7, 0xd1, 0x83, 0xfd, 0x31,
	0x2f, 0x2b, 0xbd, 0x6d, 0x33, 0x9c, 0x4b, 0x11, 0x17, 0x52, 0x89, 0x2a, 0xaf, 0x36, 0x8c, 0x5f,
	0x69, 0xc5, 0xf2, 0x4f, 0xae, 0xe2, 0x7e, 0x61, 0x76, 0x6c, 0x3c, 0xaf, 0x7f, 0x02, 0x00, 0x00,
	0xff, 0xff, 0xf9, 0x44, 0x9d, 0x6f, 0x82, 0x01, 0x00, 0x00,
}
